# T·∫°o c∆° s·ªü d·ªØ li·ªáu m·∫´u (6 giao d·ªãch)
toy_transactions = [
    ['A', 'C', 'T', 'W'],  # TID 1
    ['C', 'D', 'W'],       # TID 2
    ['A', 'C', 'T', 'W'],  # TID 3
    ['A', 'C', 'D', 'W'],  # TID 4
    ['A', 'C', 'D', 'T', 'W'],  # TID 5
    ['C', 'D', 'T']        # TID 6
]

# ƒê·∫∑t minsup 50% = 3 giao d·ªãch
min_support = 3

print("üîç Ch·∫°y Apriori:")
freq_apriori, support_apriori = apriori(toy_transactions, min_support)
print(f"T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_apriori)}")
for itemset in sorted(freq_apriori, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(itemset)} - support: {support_apriori[itemset]}")

print("\nüîç Ch·∫°y Eclat:")
freq_eclat, support_eclat = eclat(toy_transactions, min_support)
print(f"T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_eclat)}")
for itemset in sorted(freq_eclat, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(itemset)} - support: {support_eclat[frozenset(itemset)]}")

print("\nüîç T√≠nh t·∫≠p ph·ªï bi·∫øn ƒë√≥ng (Charm):")
closed_sets = find_closed(freq_apriori, support_apriori)
for s in closed_sets:
    print(f"  {set(s)} - support: {support_apriori[s]}")

print("\nüîç T√≠nh t·∫≠p ph·ªï bi·∫øn t·ªëi ƒë·∫°i (GenMax):")
maximal_sets = find_maximal(freq_apriori)
for s in maximal_sets:
    print(f"  {set(s)} - support: {support_apriori[s]}")





# ==================== D·ªÆ LI·ªÜU M·∫™U ====================
toy_transactions = [
    ['A', 'C', 'T', 'W'],  # TID 1
    ['C', 'D', 'W'],       # TID 2
    ['A', 'C', 'T', 'W'],  # TID 3
    ['A', 'C', 'D', 'W'],  # TID 4
    ['A', 'C', 'D', 'T', 'W'],  # TID 5
    ['C', 'D', 'T']        # TID 6
]

min_support = 3  # 50%

# ==================== APRIORI ====================
print("üîç Apriori:")
freq_apriori, support_apriori = apriori(toy_transactions, min_support)
print(f"  T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_apriori)}")
for itemset in sorted(freq_apriori, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(itemset)} - support: {support_apriori[itemset]}")

# ==================== ECLAT ====================
print("\nüîç Eclat:")
freq_eclat, support_eclat = eclat(toy_transactions, min_support)
print(f"  T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_eclat)}")
for itemset in sorted(freq_eclat, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(itemset)} - support: {support_eclat[frozenset(itemset)]}")

# ==================== CHARM (ƒë√∫ng thu·∫≠t to√°n) ====================
print("\nüîç Charm - T·∫≠p ph·ªï bi·∫øn ƒë√≥ng:")
freq_charm, support_charm = charm(toy_transactions, min_support)
print(f"  T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_charm)}")
for s in sorted(freq_charm, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(s)} - support: {support_charm[s]}")

# ==================== GENMAX (ƒë√∫ng thu·∫≠t to√°n) ====================
print("\nüîç GenMax - T·∫≠p ph·ªï bi·∫øn t·ªëi ƒë·∫°i:")
freq_genmax, support_genmax = genmax(toy_transactions, min_support)
print(f"  T·ªïng s·ªë t·∫≠p ph·ªï bi·∫øn: {len(freq_genmax)}")
for s in sorted(freq_genmax, key=lambda x: (len(x), sorted(x))):
    print(f"  {set(s)} - support: {support_genmax[s]}")
